% test ComparisionDTI
br1 = BrainRegion('BR1', 'brain region 1', 1, 11, 111);
br2 = BrainRegion('BR2', 'brain region 2', 2, 22, 222);
br3 = BrainRegion('BR3', 'brain region 3', 3, 33, 333);
br4 = BrainRegion('BR4', 'brain region 4', 4, 44, 444);
br5 = BrainRegion('BR5', 'brain region 5', 5, 55, 555);
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

subject_class = Comparison.getSubjectClass('ComparisonDTI');

sub1 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 1);
sub2 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 2);
sub3 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 3);
sub4 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 4);
sub5 = Subject.getSubject(subject_class, repmat({atlas}, 1, Subject.getBrainAtlasNumber(subject_class)), 'SubjectID', 5);
group = Group(subject_class, {sub1, sub2, sub3 sub4, sub5});

measures = {'Assortativity', 'Degree', 'Distance'};

%% Test 1: Instantiation
for i = 1:1:numel(measures)
    comparison = ComparisonDTI('c1', atlas,  repmat({group}, 1, ComparisonDTI.getGroupNumber()), atlas, group, 'ComparisonDTI.measure_code', measures{i});
    assert(~isempty(comparison), ...
        ['BRAPH:ComparisionDTI:Instantiation'], ...
        ['ComparisionDTI does not initialize correctly.']) %#ok<*NBRAK>
end

%% Test 2: Correct Size defaults
for i = 1:1:numel(measures)
    number_of_repetitions = 10;
    comparison = ComparisonDTI('c1', atlas,  repmat({group}, 1, ComparisonDTI.getGroupNumber()), atlas, group, 'ComparisonDTI.measure_code', measures{i}, 'ComparisonDTI.number_of_repetitions', number_of_repetitions);
    values_1 = comparison.getGroupValue(1);
    average_values_1 = comparison.getGroupAverageValue(1);
    values_2 = comparison.getGroupValue(2);
    average_values_2 = comparison.getGroupAverageValue(2);
    difference = comparison.getDifference();  % difference
    all_differences = comparison.getAllDifferences(); % all differences obtained through the permutation test
    p_single = comparison.getPSingleTail(); % p value single tailed
    p_double = comparison.getPDoubleTail();  % p value double tailed
    confidence_interval_min = comparison.getConfidenceIntervalMin();  % min value of the 95% confidence interval
    confidence_interval_max = comparison.getConfidenceIntervalMax(); % max value of the 95% confidence interval
    
    if Measure.is_global(measures{i})
        assert(iscell(values_1) & ...
            isequal(numel(values_1), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [1, 1]), values_1)) & ...
            iscell(values_2) & ...
            isequal(numel(values_2), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [1, 1]), values_2)), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with global measures.']) %#ok<*NBRAK>
        assert(isequal(numel(average_values_1), 1) & ...
            isequal(numel(average_values_2), 1) & ...
            isequal(numel(difference), 1) & ...
            isequal(numel(all_differences), number_of_repetitions) & ...
            isequal(numel(p_single), 1) & ...
            isequal(numel(p_double), 1) & ...
            isequal(numel(confidence_interval_min), 1) & ...
            isequal(numel(confidence_interval_max), 1), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with global measures.']) %#ok<*NBRAK>
    elseif Measure.is_nodal(measures{i})
        assert(iscell(values_1) & ...
            isequal(numel(values_1), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), 1]), values_1)) & ...
            iscell(values_2) & ...
            isequal(numel(values_2), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), 1]), values_2)) , ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with nodal measures.']) %#ok<*NBRAK>
        assert(isequal(size(average_values_1), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(average_values_2), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(difference), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(all_differences), [1, number_of_repetitions]) & ...
            isequal(size(p_single), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(p_double), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(confidence_interval_min), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(confidence_interval_max), [atlas.getBrainRegions().length(), 1]), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with nodal measures.']) %#ok<*NBRAK>
    elseif Measure.is_binodal(measures{i})
        assert(iscell(values_1) & ...
            isequal(numel(values_1), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), values_1)) & ...
            iscell(values_2) & ...
            isequal(numel(values_2), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), values_2)), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with binodal measures.']) %#ok<*NBRAK>
        assert(isequal(size(average_values_1), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(average_values_2), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(difference), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(all_differences), [1, number_of_repetitions]) & ...
            isequal(size(p_single), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(p_double), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(confidence_interval_min), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(confidence_interval_max), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with binodal measures.']) %#ok<*NBRAK>
    end
end

%% Test 3: Comparison Initialization with values
for i = 1:1:numel(measures)
    % setup
    number_of_repetitions = 10;
    for j = 1:1:group.subjectnumber()
        A = rand(atlas.getBrainRegions().length());
        B = rand(atlas.getBrainRegions().length());
        g = Graph.getGraph('GraphWU', A);
        h = Graph.getGraph('GraphWU', B);
        m  = Measure.getMeasure(measures{i}, g);
        n = Measure.getMeasure(measures{i}, h);
        values_1{j} =  m.getValue();
        values_2{j} = n.getValue();
    end

    average_values_1 = mean(reshape(cell2mat(values_1), [size(values_1{1}, 1), size(values_1{1}, 2), group.subjectnumber()]), 3);
    average_values_2 = mean(reshape(cell2mat(values_2), [size(values_2{1}, 1), size(values_2{1}, 2), group.subjectnumber()]), 3);
    
    difference  = average_values_2 - average_values_1;
    for j = 1:1:number_of_repetitions
        all_differences{j} =  values_1{1} - values{2};  % similar
    end
    p_single = difference;  % all similar
    p_double = difference;
    confidence_interval_min = difference;
    confidence_interval_max = difference;
    
    % act
    comparison = ComparisonDTI('c1', atlas,  repmat({group}, 1, ComparisonDTI.getGroupNumber()), atlas, group, ...
        'ComparisonDTI.measure_code', measures{i}, 'ComparisonDTI.number_of_repetitions', number_of_repetitions, ...
        'ComparisonDTI.values_1', values_1, ...
        'ComparisonDTI.values_2', values_2, ...
        'ComparisonDTI.average_values_1', average_values_1, ...
        'ComparisonDTI.average_values_2', average_values_2, ...
        'ComparisonDTI.difference', difference, ...
        'ComparisonDTI.all_differences', all_differences, ...
        'ComparisonDTI.p_single', p_single, ...
        'ComparisonDTI.p_double', p_double, ....
        'ComparisonDTI.confidence_min', confidence_interval_min, ...
        'ComparisonDTI.confidence_max', confidence_interval_max ...
        );
    
    comparison_values_1 = comparison.getGroupValue(1);
    comparison_values_2 = comparison.getGroupValue(2);
    comparison_average_1 = comparison.getGroupAverageValue(1);
    comparison_average_2 = comparison.getGroupAverageValue(2);
    comparison_difference = comparison.getDifference();
    comparison_all_differences = comparison.getAllDifferences();
    comparison_p_single = comparison.getPSingleTail();
    comparison_p_double = comparison.getPDoubleTail();
    comparison_confidence_interval_min = comparison.getConfidenceIntervalMin();
    comparison_confidence_interval_max = comparison.getConfidenceIntervalMax();
    
    % assert
    if Measure.is_global(measures{i})
        assert(iscell(comparison_values_1) & ...
            isequal(numel(comparison_values_1), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [1, 1]), comparison_values_1)) & ...
            iscell(comparison_values_2) & ...
            isequal(numel(comparison_values_2), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [1, 1]), comparison_values_2)), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with global measures.']) %#ok<*NBRAK>
        assert(isequal(numel(comparison_average_1), 1) & ...
            isequal(numel(comparison_average_2), 1) & ...
            isequal(numel(comparison_difference), 1) & ...
            isequal(numel(comparison_all_differences), number_of_repetitions) & ...
            isequal(numel(comparison_p_single), 1) & ...
            isequal(numel(comparison_p_double), 1) & ...
            isequal(numel(comparison_confidence_interval_min), 1) & ...
            isequal(numel(comparison_confidence_interval_max), 1), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with global measures.']) %#ok<*NBRAK>
    elseif Measure.is_nodal(measures{i})
        assert(iscell(comparison_values_1) & ...
            isequal(numel(comparison_values_1), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), 1]), comparison_values_1)) & ...
            iscell(comparison_values_2) & ...
            isequal(numel(comparison_values_2), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), 1]), comparison_values_2)) , ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with nodal measures.']) %#ok<*NBRAK>
        assert(isequal(size(comparison_average_1), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(comparison_average_2), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(comparison_difference), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(comparison_all_differences), [1, number_of_repetitions]) & ...
            isequal(size(comparison_p_single), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(comparison_p_double), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(comparison_confidence_interval_min), [atlas.getBrainRegions().length(), 1]) & ...
            isequal(size(comparison_confidence_interval_max), [atlas.getBrainRegions().length(), 1]), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with nodal measures.']) %#ok<*NBRAK>
    elseif Measure.is_binodal(measures{i})
        assert(iscell(comparison_values_1) & ...
            isequal(numel(comparison_values_1), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), comparison_values_1)) & ...
            iscell(comparison_values_2) & ...
            isequal(numel(comparison_values_2), group.subjectnumber) & ...
            all(cellfun(@(x) isequal(size(x), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), comparison_values_2)), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with binodal measures.']) %#ok<*NBRAK>
        assert(isequal(size(comparison_average_1), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(comparison_average_2), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(comparison_difference), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(comparison_all_differences), [1, number_of_repetitions]) & ...
            isequal(size(comparison_p_single), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(comparison_p_double), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(comparison_confidence_interval_min), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]) & ...
            isequal(size(comparison_confidence_interval_max), [atlas.getBrainRegions().length(), atlas.getBrainRegions().length()]), ...
            ['BRAPH:ComparisonDTI:Instantiation'], ...
            ['ComparisonDTI does not initialize correctly with binodal measures.']) %#ok<*NBRAK>
    end    
end